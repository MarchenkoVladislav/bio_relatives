package genome.compare;

/**
 * Defines basic person representation for the further
 * relationship analysis.
 *
 * @author Sergey Hvatov
 * @author Vladislav Marchenko
 */
public class Person {
    /**
     * Genome of the person generated by {@linkGenomeConstructor}.
     */
    private String genome_;

    /**
     * Role of the person in the family.
     */
    private PersonRole role_;

    /**
     * Default class constructor from person's role and his/her genome.
     *
     * @param role   Role of the person in the family.
     * @param genome Genome of the person.
     */
    public Person(PersonRole role, String genome) {
        this.role_ = role;
        this.genome_ = genome;
    }

    /**
     * Compares one Person's genome with another's.
     *
     * @param other Another person, with who we compare.
     * @return The percentage / 100 of the similarity between two genomes.
     */
    public double compareGenomes(Person other) {
        return 0;
    }

    /**
     * Get the genome of the person method.
     *
     * @return The genome of the person.
     */
    public String getGenome() {
        return genome_;
    }

    /**
     * Get the role of the person method.
     *
     * @return The role of the person.
     */
    public PersonRole getRole() {
        return role_;
    }
}
